---
title: "life-expectancy"
format: gfm
---

```{r}
library(readr)
library(dplyr)
library(countrycode)
library(priceR)
library(ggplot2)
```

```{r}
life_exp <- read_csv("data/DP_LIVE_11122023092440528.csv")
health_spend <- read_csv("data/SHA_11122023093838475.csv")
```

```{r}
exp2020 <- life_exp |> 
  filter(TIME == 2020 & SUBJECT == "TOT") |> 
  group_by(LOCATION) |> 
  summarise(
    years = Value
  )

spend2020_gdp <- health_spend |> 
  filter(
    `Financing scheme` == "All financing schemes",
    Function == "Current expenditure on health (all functions)",
    Provider == "All providers",
    Measure == "Share of gross domestic product",
  )
```


```{r}
# Per capita expenditure

spend2020_percap <- health_spend |> 
  filter(
    `Financing scheme` == "All financing schemes",
    Function == "Current expenditure on health (all functions)",
    Provider == "All providers",
    Measure == "Per capita, current prices",
  )

# Get current exchange rate (figure out how to get historical)
# Requires registering for a public key at https://exchangerate.host

exchange <- exchange_rate_latest("USD") 

# Add exchange rates matching by currency code

spend2020_percap$exchange_USD <- exchange$one_USD_is_equivalent_to[match(spend2020_percap$`Unit Code`, exchange$currency)]

# Calculate per capita values in USD

spend2020_percap$value_USD <- spend2020_percap$Value / spend2020_percap$exchange_USD
```

```{r}
# Combine columns of interest

## Trim expenditure df

spend2020_percap <- spend2020_percap |> 
  select(c(9, 10, 23))

# Join 

full <- full_join(spend2020_percap, exp2020,
          by = "LOCATION")
```

```{r}
ggplot(full, aes(value_USD, years)) +
  geom_point() +
  theme_classic()
```






